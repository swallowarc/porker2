syntax = "proto3";
package porker.v2;

import "porker/v2/domain.proto";

option go_package = "github.com/swallowarc/porker2/backend/internal/interface/pb/porker/v2;porkerv2";

service Porker2Service {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  rpc VerifyUser(VerifyUserRequest) returns (VerifyUserResponse);

  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse);
  rpc CheckRoom(CheckRoomRequest) returns (CheckRoomResponse);
  rpc JoinRoom(JoinRoomRequest) returns (stream JoinRoomResponse);
  rpc LeaveRoom(LeaveRoomRequest) returns (LeaveRoomResponse);
  rpc CastVote(CastVoteRequest) returns (CastVoteResponse);
  rpc ShowVotes(ShowVotesRequest) returns (ShowVotesResponse);
  rpc ResetVotes(ResetVotesRequest) returns (ResetVotesResponse);
  rpc KickUser(KickUserRequest) returns (KickUserResponse);
  rpc UpdateRoom(UpdateRoomRequest) returns (UpdateRoomResponse);
  rpc ToggleObserverMode(ToggleObserverModeRequest) returns (ToggleObserverModeResponse);
}

/* セッションについて
 * Login以外のRPCはLoginで返却されたtokenを必要とする。
 * サーバサイドではtokenからlogin_idを特定し各種処理を行う。
 */

/* Login ログイン
 * ログインが成功した場合、tokenを返す。
 *
 * Errors:
 * - InvalidArgument:
 *   - ログイン名が未指定、またはフォーマット不正
 * - AlreadyExists:
 *   - 既に同じIDでログイン済み
 */
message LoginRequest {
  string user_name = 1;
}

message LoginResponse {
  string user_id = 1;
}

/* VerifyUser ユーザの存在確認
 * cookieの有効性を確認。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 */
message VerifyUserRequest {}

message VerifyUserResponse {
  string user_id = 1;
  string user_name = 2;
}

/* Logout ログアウト
 * ログアウトする。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 */
message LogoutRequest {}

message LogoutResponse {}

/* CreateRoom roomを作成する。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 */
message CreateRoomRequest {}

message CreateRoomResponse {
  string room_id = 1;
}

/* CheckRoom roomが入室可能か確認する。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 * - NotFound:
 *   - roomが存在しない
 * - FailedPrecondition:
 *   - roomが満員
 */
message CheckRoomRequest {
  string room_id = 1;
}

message CheckRoomResponse {}

/* JoinRoom roomに参加する。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 * - NotFound:
 *   - roomが存在しない
 * - FailedPrecondition:
 *   - roomが満員
 *   - 指定されたroomに参加していない
 */
message JoinRoomRequest {
  string room_id = 1;
}

message JoinRoomResponse {
  RoomCondition condition = 1;
}

/* LeaveRoom roomから退出する。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 * - FailedPrecondition:
 *   - 指定されたroomに参加していない
 */
message LeaveRoomRequest {
  string room_id = 1;
}

message LeaveRoomResponse {}

/* CastVote 投票する。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 * - FailedPrecondition:
 *   - 指定されたroomに参加していない
 *   - roomが投票可能な状態でない
 */
message CastVoteRequest {
  string room_id = 1;
  Point point = 2;
}

message CastVoteResponse {}

/* ResetVotes 投票をリセットする。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 * - NotFound:
 *   - 指定されたroomに参加していない
 */
message ResetVotesRequest {
  string room_id = 1;
}

message ResetVotesResponse {}

/* ShowVotes 開票する。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 * - NotFound:
 *   - 指定されたroomに参加していない
 * - FailedPrecondition:
 *   - roomが開票可能な状態でない
 */
message ShowVotesRequest {
  string room_id = 1;
}

message ShowVotesResponse {}

/* KickUser ユーザを強制退室させる。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 * - NotFound:
 *   - 実行ユーザが指定されたroomに参加していない
 * - PermissionDenied:
 *   - 実行ユーザがroomのオーナーではない
 * - FailedPrecondition:
 *   - 実行ユーザ自身のIDが指定されている
 *   - target_user_idが指定されたroomに参加していない
 */
message KickUserRequest {
  string room_id = 1;
  string target_user_id = 2;
}

message KickUserResponse {}

/* UpdateRoom roomの設定を変更する。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 * - NotFound:
 *   - 指定されたroomに参加していない
 */
message UpdateRoomRequest {
  string room_id = 1;
  bool auto_open = 2;
  DisplayMode display_mode = 3;
}

message UpdateRoomResponse {}

/* ToggleObserverMode 観察者モードの切り替え
 * ユーザーの役割を投票者と観察者の間で切り替える。
 * 観察者は投票せずに部屋の状況を閲覧のみ可能。
 *
 * Errors:
 * - Unauthenticated:
 *   - cookieのtokenがない、または無効
 * - NotFound:
 *   - 指定されたroomに参加していない
 */
message ToggleObserverModeRequest {
  string room_id = 1;
  bool is_observer = 2;
}

message ToggleObserverModeResponse {}
