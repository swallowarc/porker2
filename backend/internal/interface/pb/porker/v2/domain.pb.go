// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: porker/v2/domain.proto

package porkerv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Violation int32

const (
	Violation_VIOLATION_UNSPECIFIED Violation = 0
)

// Enum value maps for Violation.
var (
	Violation_name = map[int32]string{
		0: "VIOLATION_UNSPECIFIED",
	}
	Violation_value = map[string]int32{
		"VIOLATION_UNSPECIFIED": 0,
	}
)

func (x Violation) Enum() *Violation {
	p := new(Violation)
	*p = x
	return p
}

func (x Violation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Violation) Descriptor() protoreflect.EnumDescriptor {
	return file_porker_v2_domain_proto_enumTypes[0].Descriptor()
}

func (Violation) Type() protoreflect.EnumType {
	return &file_porker_v2_domain_proto_enumTypes[0]
}

func (x Violation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Violation.Descriptor instead.
func (Violation) EnumDescriptor() ([]byte, []int) {
	return file_porker_v2_domain_proto_rawDescGZIP(), []int{0}
}

type VoteState int32

const (
	VoteState_VOTE_STATE_UNSPECIFIED VoteState = 0
	VoteState_VOTE_STATE_HIDE        VoteState = 1
	VoteState_VOTE_STATE_OPEN        VoteState = 2
)

// Enum value maps for VoteState.
var (
	VoteState_name = map[int32]string{
		0: "VOTE_STATE_UNSPECIFIED",
		1: "VOTE_STATE_HIDE",
		2: "VOTE_STATE_OPEN",
	}
	VoteState_value = map[string]int32{
		"VOTE_STATE_UNSPECIFIED": 0,
		"VOTE_STATE_HIDE":        1,
		"VOTE_STATE_OPEN":        2,
	}
)

func (x VoteState) Enum() *VoteState {
	p := new(VoteState)
	*p = x
	return p
}

func (x VoteState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteState) Descriptor() protoreflect.EnumDescriptor {
	return file_porker_v2_domain_proto_enumTypes[1].Descriptor()
}

func (VoteState) Type() protoreflect.EnumType {
	return &file_porker_v2_domain_proto_enumTypes[1]
}

func (x VoteState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteState.Descriptor instead.
func (VoteState) EnumDescriptor() ([]byte, []int) {
	return file_porker_v2_domain_proto_rawDescGZIP(), []int{1}
}

type Point int32

const (
	Point_POINT_UNSPECIFIED Point = 0
	Point_POINT_0           Point = 1
	Point_POINT_0_5         Point = 2
	Point_POINT_1           Point = 3
	Point_POINT_2           Point = 4
	Point_POINT_3           Point = 5
	Point_POINT_5           Point = 6
	Point_POINT_8           Point = 7
	Point_POINT_13          Point = 8
	Point_POINT_21          Point = 9
	Point_POINT_COFFEE      Point = 100
	Point_POINT_QUESTION    Point = 101
)

// Enum value maps for Point.
var (
	Point_name = map[int32]string{
		0:   "POINT_UNSPECIFIED",
		1:   "POINT_0",
		2:   "POINT_0_5",
		3:   "POINT_1",
		4:   "POINT_2",
		5:   "POINT_3",
		6:   "POINT_5",
		7:   "POINT_8",
		8:   "POINT_13",
		9:   "POINT_21",
		100: "POINT_COFFEE",
		101: "POINT_QUESTION",
	}
	Point_value = map[string]int32{
		"POINT_UNSPECIFIED": 0,
		"POINT_0":           1,
		"POINT_0_5":         2,
		"POINT_1":           3,
		"POINT_2":           4,
		"POINT_3":           5,
		"POINT_5":           6,
		"POINT_8":           7,
		"POINT_13":          8,
		"POINT_21":          9,
		"POINT_COFFEE":      100,
		"POINT_QUESTION":    101,
	}
)

func (x Point) Enum() *Point {
	p := new(Point)
	*p = x
	return p
}

func (x Point) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Point) Descriptor() protoreflect.EnumDescriptor {
	return file_porker_v2_domain_proto_enumTypes[2].Descriptor()
}

func (Point) Type() protoreflect.EnumType {
	return &file_porker_v2_domain_proto_enumTypes[2]
}

func (x Point) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Point.Descriptor instead.
func (Point) EnumDescriptor() ([]byte, []int) {
	return file_porker_v2_domain_proto_rawDescGZIP(), []int{2}
}

type Ballot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Point    Point  `protobuf:"varint,3,opt,name=point,proto3,enum=porker.v2.Point" json:"point,omitempty"`
}

func (x *Ballot) Reset() {
	*x = Ballot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_porker_v2_domain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ballot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ballot) ProtoMessage() {}

func (x *Ballot) ProtoReflect() protoreflect.Message {
	mi := &file_porker_v2_domain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ballot.ProtoReflect.Descriptor instead.
func (*Ballot) Descriptor() ([]byte, []int) {
	return file_porker_v2_domain_proto_rawDescGZIP(), []int{0}
}

func (x *Ballot) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Ballot) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Ballot) GetPoint() Point {
	if x != nil {
		return x.Point
	}
	return Point_POINT_UNSPECIFIED
}

type RoomCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId      string    `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	AdminUserId string    `protobuf:"bytes,2,opt,name=admin_user_id,json=adminUserId,proto3" json:"admin_user_id,omitempty"`
	VoteState   VoteState `protobuf:"varint,3,opt,name=vote_state,json=voteState,proto3,enum=porker.v2.VoteState" json:"vote_state,omitempty"`
	Ballots     []*Ballot `protobuf:"bytes,4,rep,name=ballots,proto3" json:"ballots,omitempty"`
}

func (x *RoomCondition) Reset() {
	*x = RoomCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_porker_v2_domain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomCondition) ProtoMessage() {}

func (x *RoomCondition) ProtoReflect() protoreflect.Message {
	mi := &file_porker_v2_domain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomCondition.ProtoReflect.Descriptor instead.
func (*RoomCondition) Descriptor() ([]byte, []int) {
	return file_porker_v2_domain_proto_rawDescGZIP(), []int{1}
}

func (x *RoomCondition) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomCondition) GetAdminUserId() string {
	if x != nil {
		return x.AdminUserId
	}
	return ""
}

func (x *RoomCondition) GetVoteState() VoteState {
	if x != nil {
		return x.VoteState
	}
	return VoteState_VOTE_STATE_UNSPECIFIED
}

func (x *RoomCondition) GetBallots() []*Ballot {
	if x != nil {
		return x.Ballots
	}
	return nil
}

var File_porker_v2_domain_proto protoreflect.FileDescriptor

var file_porker_v2_domain_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x22, 0x66, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x0d,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x70, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2b, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6c,
	0x6c, 0x6f, 0x74, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x73, 0x2a, 0x26, 0x0a, 0x09,
	0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x49, 0x4f,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x2a, 0x51, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x49, 0x44, 0x45,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x02, 0x2a, 0xbd, 0x01, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x30, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x30,
	0x5f, 0x35, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x31, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x32, 0x10, 0x04, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x33, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x35, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x38, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x31,
	0x33, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x32, 0x31, 0x10,
	0x09, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x46, 0x46, 0x45,
	0x45, 0x10, 0x64, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x65, 0x42, 0x50, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x77, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x72, 0x63,
	0x2f, 0x70, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x32, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x76, 0x32,
	0x3b, 0x70, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_porker_v2_domain_proto_rawDescOnce sync.Once
	file_porker_v2_domain_proto_rawDescData = file_porker_v2_domain_proto_rawDesc
)

func file_porker_v2_domain_proto_rawDescGZIP() []byte {
	file_porker_v2_domain_proto_rawDescOnce.Do(func() {
		file_porker_v2_domain_proto_rawDescData = protoimpl.X.CompressGZIP(file_porker_v2_domain_proto_rawDescData)
	})
	return file_porker_v2_domain_proto_rawDescData
}

var file_porker_v2_domain_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_porker_v2_domain_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_porker_v2_domain_proto_goTypes = []interface{}{
	(Violation)(0),        // 0: porker.v2.Violation
	(VoteState)(0),        // 1: porker.v2.VoteState
	(Point)(0),            // 2: porker.v2.Point
	(*Ballot)(nil),        // 3: porker.v2.Ballot
	(*RoomCondition)(nil), // 4: porker.v2.RoomCondition
}
var file_porker_v2_domain_proto_depIdxs = []int32{
	2, // 0: porker.v2.Ballot.point:type_name -> porker.v2.Point
	1, // 1: porker.v2.RoomCondition.vote_state:type_name -> porker.v2.VoteState
	3, // 2: porker.v2.RoomCondition.ballots:type_name -> porker.v2.Ballot
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_porker_v2_domain_proto_init() }
func file_porker_v2_domain_proto_init() {
	if File_porker_v2_domain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_porker_v2_domain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ballot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_porker_v2_domain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_porker_v2_domain_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_porker_v2_domain_proto_goTypes,
		DependencyIndexes: file_porker_v2_domain_proto_depIdxs,
		EnumInfos:         file_porker_v2_domain_proto_enumTypes,
		MessageInfos:      file_porker_v2_domain_proto_msgTypes,
	}.Build()
	File_porker_v2_domain_proto = out.File
	file_porker_v2_domain_proto_rawDesc = nil
	file_porker_v2_domain_proto_goTypes = nil
	file_porker_v2_domain_proto_depIdxs = nil
}
