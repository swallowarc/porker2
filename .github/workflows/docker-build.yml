name: Docker Build and Push

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      push:
        description: 'Push images to registry'
        required: false
        default: 'false'

env:
  DOCKER_IMAGE: swallowarc/porker2
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request' || github.event.inputs.push == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha
            type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  release:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## Docker Image
            
            `${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}`
            
            マルチアーキテクチャサポート: `linux/amd64`, `linux/arm64`
            
            ### 使用方法
            
            ```bash
            docker run -d \
              --name porker2 \
              -p 8080:8080 \
              -p 80:80 \
              -e ENV=production \
              -e REDIS_HOST_PORT=redis:6379 \
              -e REDIS_DB=0 \
              -e CONNECT_CORS_ALLOW_ORIGINS=http://localhost \
              -e SESSION_COOKIE_DOMAIN=localhost \
              ${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}
            ```
            
            ### 環境変数
            
            | 変数名 | 説明 | デフォルト値 |
            |--------|------|------------|
            | `ENV` | 環境 (local/production) | local |
            | `REDIS_HOST_PORT` | Redisホスト:ポート | localhost:6379 |
            | `REDIS_DB` | Redis DBインデックス | 0 |
            | `CONNECT_PORT` | バックエンドポート | 8080 |
            | `CONNECT_CORS_ALLOW_ORIGINS` | CORS許可オリジン | 必須 |
            | `SESSION_COOKIE_DOMAIN` | クッキードメイン | localhost |
            
            詳細は [README.md](https://github.com/${{ github.repository }}) を参照してください。
